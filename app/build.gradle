apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId

        minSdkVersion rootProject.ext.android.minSdkVersion

        targetSdkVersion rootProject.ext.android.targetSdkVersion
        testInstrumentationRunner rootProject.ext.android.testRunner

        vectorDrawables.generatedDensities = rootProject.ext.android.generatedDensities
        vectorDrawables.useSupportLibrary = false

        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }

    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
            manifestPlaceholders += rootProject.ext.android.manifestPlaceholdersDev
            resValue "string", "app_name", "${rootProject.ext.android.applicationName} Debug"
        }
        release {
            manifestPlaceholders += rootProject.ext.android.manifestPlaceholders
            minifyEnabled true
            resValue "string", "app_name", "${rootProject.ext.android.applicationName}"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.android.javaVersion
        targetCompatibility rootProject.ext.android.javaVersion
    }

    dynamicFeatures = rootProject.ext.android.dynamicFeatures

    flavorDimensions "default"

    productFlavors {
        dev {
            //applicationIdSuffix ".debug"
            buildConfigField("String", "API_BASE_URL", rootProject.ext.endpoints.development_endpoint)
            buildConfigField("String", "PACKAGE_NAME", "\"${rootProject.ext.android.applicationId}\"")
            minSdkVersion rootProject.ext.android.minSdkVersionDev
            resConfigs rootProject.ext.android.resConfigs
            vectorDrawables.generatedDensities = rootProject.ext.android.generatedDensitiesDev
            vectorDrawables.useSupportLibrary = true
            versionNameSuffix "-dev"
        }
        prod {
            buildConfigField("String", "API_BASE_URL", rootProject.ext.endpoints.production_endpoint)
            buildConfigField("String", "PACKAGE_NAME", "\"${rootProject.ext.android.applicationId}\"")
        }
    }
}

kapt {
    useBuildCache = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Core
    implementation project(':base')

    // Android
    implementation rootProject.ext.commonDependencies.annotation
    implementation rootProject.ext.commonDependencies.appcompat
    implementation rootProject.ext.commonDependencies.cardview
    implementation rootProject.ext.commonDependencies.constraintlayout
    implementation rootProject.ext.commonDependencies.recyclerview

    // Architecture components
    implementation rootProject.ext.commonDependencies.lifecycleExtensions

    // Dagger 2
    implementation rootProject.ext.commonDependencies.dagger2
    kapt rootProject.ext.commonDependencies.dagger2Compiler

    // Kotlin
    implementation rootProject.ext.commonDependencies.kotlinJdk
    implementation rootProject.ext.commonDependencies.kotlinCoroutines

    // Moshi
    implementation rootProject.ext.commonDependencies.moshi

    // OkHttp
    implementation rootProject.ext.commonDependencies.okHttp
    implementation rootProject.ext.commonDependencies.okHttpInterceptor

    // Retrofit
    implementation rootProject.ext.commonDependencies.retrofit2
    implementation rootProject.ext.commonDependencies.retrofitConverterMoshi

    // Timber
    implementation rootProject.ext.developmentDependencies.timber

    // Unit Tests
    testImplementation rootProject.ext.testingDependencies.junit
    testImplementation rootProject.ext.testingDependencies.mockk
    testImplementation rootProject.ext.testingDependencies.assertj
    testImplementation rootProject.ext.testingDependencies.androidTestArchCore

    // Espresso Tests
    androidTestImplementation rootProject.ext.testingDependencies.mockkAndroid
    androidTestImplementation rootProject.ext.testingDependencies.androidTestCore
    androidTestImplementation rootProject.ext.testingDependencies.androidTestExt
    androidTestImplementation rootProject.ext.testingDependencies.androidTestRunner
    androidTestImplementation rootProject.ext.testingDependencies.androidTestRules
    androidTestImplementation rootProject.ext.testingDependencies.espressoCore
    androidTestImplementation rootProject.ext.testingDependencies.espressoContrib
    androidTestImplementation rootProject.ext.testingDependencies.espressoIntents
    androidTestImplementation rootProject.ext.testingDependencies.androidTestArchCore
}
